<div align="center">

# awesome-stars-webVueBlog

[![Auth](https://img.shields.io/badge/Auth-webVueBlog-ff69b4?logo=github)](https://github.com/webVueBlog/awesome-stars-webVueBlog)
[![GitHub Pull Requests](https://img.shields.io/github/stars/webVueBlog/awesome-stars-webVueBlog?logo=Undertale)](https://github.com/webVueBlog/awesome-stars-webVueBlog/stargazers)
[![HitCount](https://views.whatilearened.today/views/github/webVueBlog/awesome-stars-webVueBlog.svg)](https://github.com/webVueBlog/awesome-stars-webVueBlog)

🤩 我的star列表，每天凌晨自动更新 🤩

<img src="https://camo.githubusercontent.com/82291b0fe831bfc6781e07fc5090cbd0a8b912bb8b8d4fec0696c881834f81ac/68747470733a2f2f70726f626f742e6d656469612f394575424971676170492e676966" width="800"  height="3">
</div><br>

## 入门书籍

 * [《明解Java》](https://www.coderxing.com/r.php?r=https://u.jd.com/TA6z3m) - 豆瓣评分 8.5
 * [《Java从入门到精通（第4版 附光盘）》](https://www.coderxing.com/r.php?r=https://u.jd.com/7urNtH) - 豆瓣评分 6
 * [《入门很简单丛书：Java Web开发入门很简单》](https://www.coderxing.com/r.php?r=https://u.jd.com/2dDnsY)
 * [《程序员炼成记 从小白到工程师》](https://www.coderxing.com/r.php?r=https://u.jd.com/7zm17P)
 * [《Java从小白到大牛》](https://www.coderxing.com/r.php?r=https://u.jd.com/ZCbVjQ)
 * [《JavaWeb项目开发实战入门（全彩版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/mnkAJR)
 * [《Java精彩编程200例（全彩版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/9TGA0S)
 * [《Java轻松学》](https://www.coderxing.com/r.php?r=https://u.jd.com/zMDeI7)
 * [《大话Java：程序设计从入门到精通（含DVD光盘1张）》](https://www.coderxing.com/r.php?r=https://u.jd.com/td3bUo)
 * [《Java语言袖珍指南（第二版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/HOFu01)


## 基础书籍

 * [《Java编程思想（第4版） [thinking in java]》](https://www.coderxing.com/r.php?r=https://u.jd.com/ajylTp) - 豆瓣评分 9.1
 * [《Java核心技术 卷I：基础知识（原书第10版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/tp87o1) - 豆瓣评分 8.2
 * [《Java核心技术卷II：高级特性（原书第10版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/fYGMsC) - 豆瓣评分 7.7


### 多线程与并发
 * [《华章专业开发者丛书·Java并发编程实战》](https://www.coderxing.com/r.php?r=https://u.jd.com/ERgtGV) - 豆瓣评分 9.1
 * [《Java多线程编程实战指南（设计模式篇）》](https://www.coderxing.com/r.php?r=https://u.jd.com/XRUB8H) - 豆瓣评分 8.5
 * [《图解Java多线程设计模式》](https://www.coderxing.com/r.php?r=https://u.jd.com/LDOFjh) - 豆瓣评分 8.4
 * [《实战Java高并发程序设计》](https://www.coderxing.com/r.php?r=https://u.jd.com/WXhQuO) - 豆瓣评分 8.3
 * [《Java高并发编程详解：多线程与架构设计》](https://www.coderxing.com/r.php?r=https://u.jd.com/e5tZdf) - 豆瓣评分 7.6
 * [《Java核心技术系列：Java多线程编程核心技术 [Java Multi-thread Programming]》](https://www.coderxing.com/r.php?r=https://u.jd.com/5p2KoJ) - 豆瓣评分 5.1
 * [《Java并发编程：核心方法与框架》](https://www.coderxing.com/r.php?r=https://u.jd.com/RQu2W6)
 * [《Java多线程与Socket：实战微服务框架》](https://www.coderxing.com/r.php?r=https://u.jd.com/fkn9NP)
 * [《NIO与Socket编程技术指南》](https://www.coderxing.com/r.php?r=https://u.jd.com/ZwyPCp)
 * [《Java并发编程之美》](https://www.coderxing.com/r.php?r=https://u.jd.com/vB6BA2)
 * [《实战Java高并发程序设计（第2版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/fthTzf)


### 网络编程
 * [《Java网络编程（第四版） [Java network programming, forth edition]》](https://www.coderxing.com/r.php?r=https://u.jd.com/osowEq) - 豆瓣评分 7.6


### 数据结构
 * [《数据结构与算法分析：Java语言描述（原书第3版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/wdrJls) - 豆瓣评分 8.3
 * [《图解数据结构：使用Java》](https://www.coderxing.com/r.php?r=https://u.jd.com/9GKS26)
 * [《数据结构与算法Java语言描述》](https://www.coderxing.com/r.php?r=https://u.jd.com/DCJzy6)


### 语言基础
 * [《Java 8实战》](https://www.coderxing.com/r.php?r=https://u.jd.com/MNwLHg) - 豆瓣评分 9.2
 * [《Java函数式编程》](https://www.coderxing.com/r.php?r=https://u.jd.com/M6XqLp) - 豆瓣评分 8.9
 * [《Java编程的逻辑》](https://www.coderxing.com/r.php?r=https://u.jd.com/YApFXv) - 豆瓣评分 8.9
 * [《O'Reilly：Head First Java（中文版 第2版 涵盖Java5.0）》](https://www.coderxing.com/r.php?r=https://u.jd.com/UZgI0F) - 豆瓣评分 8.7
 * [《写给大忙人看的Java核心技术》](https://www.coderxing.com/r.php?r=https://u.jd.com/ZCMWOr) - 豆瓣评分 7.1
 * [《精通lambda表达式：Java多核编程 [Mastering Lambdas: Java Programming in a Multicore]》](https://www.coderxing.com/r.php?r=https://u.jd.com/ajoGad)
 * [《Java 9模块化开发：核心原则与实践》](https://www.coderxing.com/r.php?r=https://u.jd.com/5HXsKg)
 * [《Java JDK 9学习笔记》](https://www.coderxing.com/r.php?r=https://u.jd.com/l7fy1C)
 * [《Java 9编程参考官方大全（第10版） [Java：Thte Complete Reference，Tenth Edition]》](https://www.coderxing.com/r.php?r=https://u.jd.com/CqmtBM)
 * [《写给大忙人的Java SE 9核心技术》](https://www.coderxing.com/r.php?r=https://u.jd.com/JMdy64)


## 进阶

 * [《深入分析Java Web技术内幕（修订版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/MBhyO7) - 豆瓣评分 7.5
 * [《Java RESTful Web Service实战（第2版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/GEdlD0)


### 性能优化
 * [《Java性能优化权威指南 [Java performance]》](https://www.coderxing.com/r.php?r=https://u.jd.com/qTFNCP) - 豆瓣评分 8.4
 * [《Java程序性能优化：让你的Java程序更快、更稳定》](https://www.coderxing.com/r.php?r=https://u.jd.com/6CYRQi) - 豆瓣评分 8.1
 * [《Java性能权威指南》](https://www.coderxing.com/r.php?r=https://u.jd.com/KmJo2x) - 豆瓣评分 8.1
 * [《51CTO学院系列丛书·实战Java虚拟机：JVM故障诊断与性能优化》](https://www.coderxing.com/r.php?r=https://u.jd.com/GKe55M) - 豆瓣评分 8
 * [《Java性能调优指南》](https://www.coderxing.com/r.php?r=https://u.jd.com/sQPN8w) - 豆瓣评分 7
 * [《大话Java性能优化》](https://www.coderxing.com/r.php?r=https://u.jd.com/Uqaj5n) - 豆瓣评分 4.4


### 响应式编程
 * [《响应式架构：消息模式Actor实现与Scala、Akka应用集成》](https://www.coderxing.com/r.php?r=https://u.jd.com/nvsfLb) - 豆瓣评分 8.1
 * [《RxJava响应式编程》](https://www.coderxing.com/r.php?r=https://u.jd.com/HeIp16)
 * [《RxJava 2.x 实战》](https://www.coderxing.com/r.php?r=https://u.jd.com/iIZc0A)


### JVM虚拟机
 * [《深入理解Java虚拟机：JVM高级特性与最佳实践（第2版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/DgTnN2) - 豆瓣评分 8.9
 * [《Java核心技术系列：Java虚拟机规范（Java SE 8版） [The Java Virtual Machine Specification Jave SE 8 Edition]》](https://www.coderxing.com/r.php?r=https://u.jd.com/73DIJB) - 豆瓣评分 8.3
 * [《揭秘Java虚拟机：JVM设计原理与实现》](https://www.coderxing.com/r.php?r=https://u.jd.com/ct4KRw) - 豆瓣评分 7.9
 * [《HotSpot实战》](https://www.coderxing.com/r.php?r=https://u.jd.com/xJZjRH) - 豆瓣评分 7.1
 * [《Java从入门到动手写虚拟机1（套装共2册）》](https://www.coderxing.com/r.php?r=https://u.jd.com/0ZMjqZ)


### 代码&设计优化
 * [《重构 改善既有代码的设计 Java语言版》](https://www.coderxing.com/r.php?r=https://u.jd.com/QSoCEv) - 豆瓣评分 9.3
 * [《代码大全（第2版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/wxQc3i) - 豆瓣评分 9.3
 * [《Effective Java中文版（原书第3版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/syzAFD) - 豆瓣评分 9
 * [《代码整洁之道 程序员的职业素养》](https://www.coderxing.com/r.php?r=https://u.jd.com/Rt31CM) - 豆瓣评分 8.8
 * [《代码整洁之道 [Clean Code A Handbook of Agile Software Craftsmanship]》](https://www.coderxing.com/r.php?r=https://u.jd.com/XBQxz8) - 豆瓣评分 8.6
 * [《Spring实战（第4版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/ld8p0r) - 豆瓣评分 8.3
 * [《代码不朽：编写可维护软件的10大要则（Java版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/0hnAnw) - 豆瓣评分 7
 * [《Java代码与架构之完美优化 实战经典》](https://www.coderxing.com/r.php?r=https://u.jd.com/tyYWro)


## 设计模式

 * [《反应式设计模式》](https://www.coderxing.com/r.php?r=https://u.jd.com/SJWtpV) - 豆瓣评分 9.3
 * [《O'Reilly：Head First设计模式（中文版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/IGKmVq) - 豆瓣评分 9.2
 * [《设计模式：可复用面向对象软件的基础》](https://www.coderxing.com/r.php?r=https://u.jd.com/D59mge) - 豆瓣评分 9.1
 * [《实现领域驱动设计 [Implementing Domain-Driven Design]》](https://www.coderxing.com/r.php?r=https://u.jd.com/lFwQdc) - 豆瓣评分 8.7
 * [《原创精品系列：设计模式之禅（第2版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/yxTBEJ) - 豆瓣评分 8.7
 * [《图解设计模式》](https://www.coderxing.com/r.php?r=https://u.jd.com/H9tRFl) - 豆瓣评分 8.7
 * [《大话设计模式》](https://www.coderxing.com/r.php?r=https://u.jd.com/qfAaGS) - 豆瓣评分 8.3
 * [《领域驱动设计 软件核心复杂性应对之道 修订版》](https://www.coderxing.com/r.php?r=https://u.jd.com/PllZtF) - 豆瓣评分 8
 * [《Java测试驱动开发》](https://www.coderxing.com/r.php?r=https://u.jd.com/xRo8Ur) - 豆瓣评分 6.6


## 框架与中间件



### 数据库
 * [《高性能MySQL（第3版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/i4KCQO) - 豆瓣评分 9.3
 * [《MySQL技术内幕：InnoDB存储引擎（第2版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/Th90ra) - 豆瓣评分 8.6
 * [《大型网站系统与Java中间件实践》](https://www.coderxing.com/r.php?r=https://u.jd.com/YivOvQ) - 豆瓣评分 7.9
 * [《深入浅出MySQL 数据库开发 优化与管理维护 第2版》](https://www.coderxing.com/r.php?r=https://u.jd.com/HjaHc2) - 豆瓣评分 7.5
 * [《PostgreSQL修炼之道：从小工到专家》](https://www.coderxing.com/r.php?r=https://u.jd.com/oYHlHw) - 豆瓣评分 7.3
 * [《PostgreSQL技术内幕：查询优化深度探索》](https://www.coderxing.com/r.php?r=https://u.jd.com/hKsMRX)


### 缓存与NoSQL
 * [《Redis 深度历险：核心原理与应用实践》](https://www.coderxing.com/r.php?r=https://u.jd.com/uZirI6) - 豆瓣评分 9
 * [《Redis实战》](https://www.coderxing.com/r.php?r=https://u.jd.com/VMo7w2) - 豆瓣评分 8
 * [《Redis入门指南（第2版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/GmFr7B) - 豆瓣评分 7.6
 * [《深入分布式缓存：从原理到实践》](https://www.coderxing.com/r.php?r=https://u.jd.com/TKeCR2) - 豆瓣评分 7.1
 * [《人人都是架构师：分布式系统架构落地与瓶颈突破》](https://www.coderxing.com/r.php?r=https://u.jd.com/8DuE9W) - 豆瓣评分 6.7
 * [《MongoDB应用设计模式》](https://www.coderxing.com/r.php?r=https://u.jd.com/qd9tLA) - 豆瓣评分 6.1
 * [《MongoDB实战 架构、开发与管理》](https://www.coderxing.com/r.php?r=https://u.jd.com/Mlefug)
 * [《NoSQL数据库入门与实践（基于MongoDB、Redis）》](https://www.coderxing.com/r.php?r=https://u.jd.com/1QhhB6)


### 消息队列
 * [《RabbitMQ实战指南》](https://www.coderxing.com/r.php?r=https://u.jd.com/4SyxGo) - 豆瓣评分 9.1
 * [《Kafka权威指南》](https://www.coderxing.com/r.php?r=https://u.jd.com/qIwmGY) - 豆瓣评分 8.9
 * [《Kafka入门与实践》](https://www.coderxing.com/r.php?r=https://u.jd.com/hqBGgy) - 豆瓣评分 7.7
 * [《RocketMQ实战与原理解析》](https://www.coderxing.com/r.php?r=https://u.jd.com/vyU3eK) - 豆瓣评分 7.2
 * [《Kafka技术内幕 图文详解Kafka源码设计与实现》](https://www.coderxing.com/r.php?r=https://u.jd.com/GZh0yK) - 豆瓣评分 6.9
 * [《深入理解Kafka：核心设计与实践原理》](https://www.coderxing.com/r.php?r=https://u.jd.com/sTtFQn)
 * [《分布式消息中间件实践》](https://www.coderxing.com/r.php?r=https://u.jd.com/GzBNOZ)


### ORM框架
 * [《MyBatis从入门到精通》](https://www.coderxing.com/r.php?r=https://u.jd.com/0GXsRh) - 豆瓣评分 7.7


### Spring家族
 * [《Spring微服务实战》](https://www.coderxing.com/r.php?r=https://u.jd.com/ohN8uh) - 豆瓣评分 8.3
 * [《Spring Cloud微服务实战》](https://www.coderxing.com/r.php?r=https://u.jd.com/z1QvAP) - 豆瓣评分 7.9
 * [《深入理解Spring Cloud与微服务构建》](https://www.coderxing.com/r.php?r=https://u.jd.com/FfCbxt) - 豆瓣评分 7.7
 * [《MyBatis技术内幕》](https://www.coderxing.com/r.php?r=https://u.jd.com/wAPeEw) - 豆瓣评分 7.6
 * [《Spring Boot实战》](https://www.coderxing.com/r.php?r=https://u.jd.com/BcQznU) - 豆瓣评分 7.2
 * [《深入浅出Spring Boot 2.x》](https://www.coderxing.com/r.php?r=https://u.jd.com/k0xgoA) - 豆瓣评分 7
 * [《JavaEE开发的颠覆者：Spring Boot实战》](https://www.coderxing.com/r.php?r=https://u.jd.com/4Rtvg3) - 豆瓣评分 6.3
 * [《Spring技术内幕：深入解析Spring架构与设计原理（第2版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/2rz8BY) - 豆瓣评分 5.9
 * [《Spring Boot 2精髓：从构建小系统到架构分布式大系统》](https://www.coderxing.com/r.php?r=https://u.jd.com/xrNcv1) - 豆瓣评分 4.8
 * [《Spring 5开发大全》](https://www.coderxing.com/r.php?r=https://u.jd.com/dtDOqc)
 * [《Spring Cloud微服务架构进阶》](https://www.coderxing.com/r.php?r=https://u.jd.com/oFsaYt)
 * [《Spring源码深度解析 第2版》](https://www.coderxing.com/r.php?r=https://u.jd.com/SdhhtK)
 * [《Spring MVC实战》](https://www.coderxing.com/r.php?r=https://u.jd.com/ghc04R)
 * [《Spring Boot编程思想（核心篇）（限量版亲笔签名书签 随机发售）》](https://www.coderxing.com/r.php?r=https://u.jd.com/fCZpVU)
 * [《互联网轻量级SSM框架解密：Spring、Spring MVC、MyBatis源码深度剖析》](https://www.coderxing.com/r.php?r=https://u.jd.com/HO244A)
 * [《Spring学习指南 第3版》](https://www.coderxing.com/r.php?r=https://u.jd.com/O9L5Nb)
 * [《精通Spring MVC 4》](https://www.coderxing.com/r.php?r=https://u.jd.com/k4WSg3)


### 高并发
 * [《Netty实战》](https://www.coderxing.com/r.php?r=https://u.jd.com/htIJgi) - 豆瓣评分 7.8
 * [《七周七并发模型》](https://www.coderxing.com/r.php?r=https://u.jd.com/81Pbod) - 豆瓣评分 7.8
 * [《Netty权威指南（第2版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/7tGXx5) - 豆瓣评分 6.9
 * [《Netty进阶之路：跟着案例学Netty》](https://www.coderxing.com/r.php?r=https://u.jd.com/VBYLE0)


### 分布式
 * [《从Paxos到Zookeeper分布式一致性原理与实践》](https://www.coderxing.com/r.php?r=https://u.jd.com/3rp1Hv) - 豆瓣评分 7.8
 * [《ZooKeeper：分布式过程协同技术详解》](https://www.coderxing.com/r.php?r=https://u.jd.com/LAyupw) - 豆瓣评分 7.2


### 搜索引擎
 * [《从Lucene到Elasticsearch：全文检索实战》](https://www.coderxing.com/r.php?r=https://u.jd.com/IdftoH)


### 大数据
 * [《Hadoop权威指南：大数据的存储与分析(第4版)》](https://www.coderxing.com/r.php?r=https://u.jd.com/BlEDc7) - 豆瓣评分 8.7
 * [《Hadoop构建数据仓库实践》](https://www.coderxing.com/r.php?r=https://u.jd.com/dW1kpa) - 豆瓣评分 8.3
 * [《HBase权威指南 [HBase： The Definitive Guide]》](https://www.coderxing.com/r.php?r=https://u.jd.com/wqb9z0) - 豆瓣评分 8.1
 * [《图解Spark：核心技术与案例实战》](https://www.coderxing.com/r.php?r=https://u.jd.com/azPD8S) - 豆瓣评分 7.6
 * [《Hive编程指南 [Programming Hive]》](https://www.coderxing.com/r.php?r=https://u.jd.com/bd1YCS) - 豆瓣评分 7.4
 * [《HBase应用架构》](https://www.coderxing.com/r.php?r=https://u.jd.com/kFRuj2)


## 架构

 * [《Web性能权威指南》](https://www.coderxing.com/r.php?r=https://u.jd.com/pTZ8xk) - 豆瓣评分 8.8
 * [《从零开始学架构：照着做，你也能成为架构师》](https://www.coderxing.com/r.php?r=https://u.jd.com/7tOuAz) - 豆瓣评分 8.5
 * [《Java应用架构设计：模块化模式与OSGi》](https://www.coderxing.com/r.php?r=https://u.jd.com/Qs9SXn) - 豆瓣评分 6.9
 * [《大型网站技术架构演进与性能优化》](https://www.coderxing.com/r.php?r=https://u.jd.com/GVYZr9) - 豆瓣评分 6.8
 * [《高可用架构（第1卷）》](https://www.coderxing.com/r.php?r=https://u.jd.com/7y5NpR) - 豆瓣评分 6.3
 * [《Java架构师指南》](https://www.coderxing.com/r.php?r=https://u.jd.com/kPGIoj)
 * [《大话代码架构（项目实战版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/Bc2TLN)
 * [《小团队构建大网站：中小研发团队架构实践》](https://www.coderxing.com/r.php?r=https://u.jd.com/mzqn7f)
 * [《未来架构 从服务化到云原生(限量签名 随机发放)》](https://www.coderxing.com/r.php?r=https://u.jd.com/zDMNQs)


### 分布式架构
 * [《可伸缩架构：面向增长应用的高可用》](https://www.coderxing.com/r.php?r=https://u.jd.com/zpE3MI) - 豆瓣评分 7.4
 * [《分布式服务架构：原理、设计与实战》](https://www.coderxing.com/r.php?r=https://u.jd.com/HQHcMY) - 豆瓣评分 7.2
 * [《亿级流量网站架构核心技术 跟开涛学搭建高可用高并发系统》](https://www.coderxing.com/r.php?r=https://u.jd.com/9JXTi8) - 豆瓣评分 6.6
 * [《大型分布式网站架构设计与实践》](https://www.coderxing.com/r.php?r=https://u.jd.com/zzctjK) - 豆瓣评分 6.2
 * [《可伸缩服务架构：框架与中间件》](https://www.coderxing.com/r.php?r=https://u.jd.com/l4UA35) - 豆瓣评分 5.9
 * [《架构探险：从零开始写分布式服务框架》](https://www.coderxing.com/r.php?r=https://u.jd.com/1YUJxK) - 豆瓣评分 5.9
 * [《Cloud Native分布式架构原理与实践》](https://www.coderxing.com/r.php?r=https://u.jd.com/4trb76)
 * [《分布式系统常用技术及案例分析（第2版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/QWumiy)
 * [《云原生Java：Spring Boot、Spring Cloud与Cloud Foundry弹性系统设计》](https://www.coderxing.com/r.php?r=https://u.jd.com/53hDaR)


### 微服务架构
 * [《微服务设计》](https://www.coderxing.com/r.php?r=https://u.jd.com/5KB81a) - 豆瓣评分 8.2
 * [《生产微服务》](https://www.coderxing.com/r.php?r=https://u.jd.com/LF3vzd) - 豆瓣评分 8
 * [《架构解密：从分布式到微服务》](https://www.coderxing.com/r.php?r=https://u.jd.com/xoCkW1) - 豆瓣评分 5.8
 * [《Java微服务》](https://www.coderxing.com/r.php?r=https://u.jd.com/jk1V1F) - 豆瓣评分 5.3
 * [《Spring Cloud 微服务架构开发实战（全新升级版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/QvfyPI)
 * [《微服务实践》](https://www.coderxing.com/r.php?r=https://u.jd.com/DyZQbc)


### 架构方法论
 * [《架构整洁之道》](https://www.coderxing.com/r.php?r=https://u.jd.com/k8yxj0) - 豆瓣评分 8.8
 * [《企业应用架构模式 [Patterns of Enterprise Application Architecture]》](https://www.coderxing.com/r.php?r=https://u.jd.com/pQOd7z) - 豆瓣评分 8.3
 * [《企业IT架构转型之道 阿里巴巴中台战略思想与架构实战》](https://www.coderxing.com/r.php?r=https://u.jd.com/ipHhzt) - 豆瓣评分 8.2
 * [《聊聊“架构”》](https://www.coderxing.com/r.php?r=https://u.jd.com/jRMw2b) - 豆瓣评分 7.6
 * [《架构真经：互联网技术架构的设计原则（原书第2版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/1gr9nd) - 豆瓣评分 7.5
 * [《软件架构设计：程序员向架构师转型必备（第2版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/4Y77J0) - 豆瓣评分 7.4
 * [《恰如其分的软件架构 [Just Enough Software Architecture]》](https://www.coderxing.com/r.php?r=https://u.jd.com/XOr8py) - 豆瓣评分 7.3
 * [《软件架构设计：大型网站技术架构与业务架构融合之道》](https://www.coderxing.com/r.php?r=https://u.jd.com/lSUYn8)


## JVM周边语言

 * [《Scala编程（第3版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/R0JT1a) - 豆瓣评分 9.4
 * [《Groovy程序设计》](https://www.coderxing.com/r.php?r=https://u.jd.com/AMZkGX) - 豆瓣评分 8.2
 * [《快学Scala（第2版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/h6Gnct) - 豆瓣评分 8
 * [《Kotlin极简教程》](https://www.coderxing.com/r.php?r=https://u.jd.com/loJfwO)
 * [《Scala集合技术手册》](https://www.coderxing.com/r.php?r=https://u.jd.com/WvMNgs)


## 项目管理&领导力&流程

 * [《构建之法 现代软件工程（第三版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/5OmcTI) - 豆瓣评分 9
 * [《精益思想（白金版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/gcHfSY) - 豆瓣评分 8.2
 * [《给产品经理讲技术》](https://www.coderxing.com/r.php?r=https://u.jd.com/uZ2nZV)


### 项目管理
 * [《持续交付：发布可靠软件的系统方法》](https://www.coderxing.com/r.php?r=https://u.jd.com/TzKtiz) - 豆瓣评分 8.7
 * [《名家经典系列：人件（原书第3版） [Peopleware: Productive Projects and Teams]》](https://www.coderxing.com/r.php?r=https://u.jd.com/qEOLhm) - 豆瓣评分 8.4
 * [《硝烟中的Scrum和XP：我们如何实施Scrum》](https://www.coderxing.com/r.php?r=https://u.jd.com/gc719a) - 豆瓣评分 8.4
 * [《敏捷软件开发实践 估算与计划》](https://www.coderxing.com/r.php?r=https://u.jd.com/ZHeyFS) - 豆瓣评分 8.4
 * [《人月神话（40周年中文纪念版） [The Mythical Man-Month：Essays on Software Engineering Anniversary Edition]》](https://www.coderxing.com/r.php?r=https://u.jd.com/mUkwcD) - 豆瓣评分 8.3
 * [《Scrum敏捷软件开发》](https://www.coderxing.com/r.php?r=https://u.jd.com/T9HSMS) - 豆瓣评分 8
 * [《用户故事与敏捷方法 [User Stories Applied:For Agile Software Development]》](https://www.coderxing.com/r.php?r=https://u.jd.com/D8oZoG) - 豆瓣评分 8
 * [《用户故事地图 [User Story Mapping]》](https://www.coderxing.com/r.php?r=https://u.jd.com/P6RDR3) - 豆瓣评分 7.4
 * [《知行合一 实现价值驱动的敏捷和精益开发》](https://www.coderxing.com/r.php?r=https://u.jd.com/1zgjNd)
 * [《互联网项目管理实践精粹》](https://www.coderxing.com/r.php?r=https://u.jd.com/Dtrvqn)


### 团队管理
 * [《卓有成效的管理者（珍藏版） [The Effective Executive]》](https://www.coderxing.com/r.php?r=https://u.jd.com/f2kMe8) - 豆瓣评分 8.8
 * [《跃迁：从技术到管理的硅谷路径》](https://www.coderxing.com/r.php?r=https://u.jd.com/xLBU9J) - 豆瓣评分 8.4
 * [《告别失控 软件开发团队管理必读》](https://www.coderxing.com/r.php?r=https://u.jd.com/w4p97S) - 豆瓣评分 7.9
 * [《赋能：打造应对不确定性的敏捷团队 [Team of Teams]》](https://www.coderxing.com/r.php?r=https://u.jd.com/K5DiJn) - 豆瓣评分 7.6
 * [《OKR工作法：谷歌、领英等顶级公司的高绩效秘籍 [Radical Focus]》](https://www.coderxing.com/r.php?r=https://u.jd.com/8Gsrin) - 豆瓣评分 7.6
 * [《CTO说》](https://www.coderxing.com/r.php?r=https://u.jd.com/PchUJJ) - 豆瓣评分 7.3
 * [《轻流程 IT团队的积分式绩效管理》](https://www.coderxing.com/r.php?r=https://u.jd.com/wGQe5I) - 豆瓣评分 7
 * [《技术领导力：程序员如何才能带团队》](https://www.coderxing.com/r.php?r=https://u.jd.com/spqdp1) - 豆瓣评分 5.4
 * [《敏捷文化：如何打造优秀的高效能团队 [The Agile Culture: Leading through Trust and Owner]》](https://www.coderxing.com/r.php?r=https://u.jd.com/pSHHhA)


## 数学与算法



### 数学
 * [《数学之美（第二版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/lcuOQq) - 豆瓣评分 8.9
 * [《程序员的数学2 概率统计》](https://www.coderxing.com/r.php?r=https://u.jd.com/Yte3WW) - 豆瓣评分 8.7
 * [《程序员的数学3 线性代数》](https://www.coderxing.com/r.php?r=https://u.jd.com/WiKN9k) - 豆瓣评分 8.6
 * [《程序员的数学》](https://www.coderxing.com/r.php?r=https://u.jd.com/iwv4Zd) - 豆瓣评分 7.2
 * [《程序员的数学思维修炼（趣味解读）》](https://www.coderxing.com/r.php?r=https://u.jd.com/qhD5IJ) - 豆瓣评分 5.4
 * [《统计之美：人工智能时代的科学思维》](https://www.coderxing.com/r.php?r=https://u.jd.com/vBLDyU)
 * [《统计思维：程序员数学之概率统计（第2版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/iCEv9a)


### 算法
 * [《算法导论（原书第3版）/计算机科学丛书 [Introduction to Algorithms, third edition]》](https://www.coderxing.com/r.php?r=https://u.jd.com/AmwANr) - 豆瓣评分 9.3
 * [《算法图解》](https://www.coderxing.com/r.php?r=https://u.jd.com/J7HWa6) - 豆瓣评分 8.4
 * [《漫画算法：小灰的算法之旅（全彩）》](https://www.coderxing.com/r.php?r=https://u.jd.com/Jt8KBI)


## 职业素养与个人成长

 * [《我编程，我快乐：程序员职业规划之道》](https://www.coderxing.com/r.php?r=https://u.jd.com/DGNxfn) - 豆瓣评分 7.9
 * [《程序员的自我修养》](https://www.coderxing.com/r.php?r=https://u.jd.com/THQJSq) - 豆瓣评分 6.5


### 职业素养提升
 * [《码农翻身：用故事给技术加点料》](https://www.coderxing.com/r.php?r=https://u.jd.com/J7iABA) - 豆瓣评分 9.1
 * [《程序员修炼之道：从小工到专家》](https://www.coderxing.com/r.php?r=https://u.jd.com/TL272C) - 豆瓣评分 8.8
 * [《极客与团队：软件工程师的团队生存秘笈》](https://www.coderxing.com/r.php?r=https://u.jd.com/mAbLoA) - 豆瓣评分 8.3
 * [《程序员思维修炼(修订版)》](https://www.coderxing.com/r.php?r=https://u.jd.com/8l5o8l) - 豆瓣评分 8.2
 * [《高效能程序员的修炼》](https://www.coderxing.com/r.php?r=https://u.jd.com/s1OiZc) - 豆瓣评分 8.2
 * [《O'Reilly：卓有成效的程序员 [Productive programmer]》](https://www.coderxing.com/r.php?r=https://u.jd.com/XxVx3J) - 豆瓣评分 8.1
 * [《Java工程师修炼之道》](https://www.coderxing.com/r.php?r=https://u.jd.com/ODjq2h) - 豆瓣评分 7.8
 * [《程序员的成长课》](https://www.coderxing.com/r.php?r=https://u.jd.com/DKrbwc) - 豆瓣评分 7.6
 * [《高效程序员的45个习惯：敏捷开发修炼之道(修订版)》](https://www.coderxing.com/r.php?r=https://u.jd.com/y36OqE) - 豆瓣评分 7.6
 * [《温伯格技术思想三部曲：颠覆完美软件 软件测试必须知道的几件事》](https://www.coderxing.com/r.php?r=https://u.jd.com/JKgll1) - 豆瓣评分 7.5
 * [《温伯格技术思想三部曲：程序开发心理学（银年纪念版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/0K8XDo) - 豆瓣评分 7.4
 * [《软件开发本质论：追求简约、体现价值、逐步构建》](https://www.coderxing.com/r.php?r=https://u.jd.com/AlxMcW) - 豆瓣评分 7.3
 * [《内外兼修：程序员的成长之路》](https://www.coderxing.com/r.php?r=https://u.jd.com/W0uA76) - 豆瓣评分 6.6


### 个人软技能
 * [《把时间当作朋友（第3版 全彩）》](https://www.coderxing.com/r.php?r=https://u.jd.com/I3D7Z0) - 豆瓣评分 8.5
 * [《暗时间》](https://www.coderxing.com/r.php?r=https://u.jd.com/GZgwi5) - 豆瓣评分 8.4
 * [《关键对话：如何高效能沟通（原书第2版） [Crucial Conversations: Tools for Talking When Stak]》](https://www.coderxing.com/r.php?r=https://u.jd.com/jpIkyt) - 豆瓣评分 8.1
 * [《温伯格技术思想三部曲：成为技术领导者 掌握全面解决问题的方法》](https://www.coderxing.com/r.php?r=https://u.jd.com/N6YwQD) - 豆瓣评分 8
 * [《软技能 代码之外的生存指南》](https://www.coderxing.com/r.php?r=https://u.jd.com/KkL3kA) - 豆瓣评分 8
 * [《程序员健康指南》](https://www.coderxing.com/r.php?r=https://u.jd.com/8YQH5T) - 豆瓣评分 7.5
 * [《如何把事情做到最好：改变全球9800万人的人生指导书 [Mastery]》](https://www.coderxing.com/r.php?r=https://u.jd.com/NS6cLf) - 豆瓣评分 7.2
 * [《程序员的英语》](https://www.coderxing.com/r.php?r=https://u.jd.com/Gt5VDT) - 豆瓣评分 5.9
 * [《高效能人士的七个习惯（30周年纪念版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/oG641c)


## 大厂出品



### 阿里巴巴技术丛书
 * [《码出高效：Java开发手册》](https://www.coderxing.com/r.php?r=https://u.jd.com/mIi1ic) - 豆瓣评分 8.8
 * [《大数据之路 阿里巴巴大数据实践》](https://www.coderxing.com/r.php?r=https://u.jd.com/4888rh) - 豆瓣评分 7.8
 * [《技术之瞳 阿里巴巴技术笔试心得》](https://www.coderxing.com/r.php?r=https://u.jd.com/xHqHfG) - 豆瓣评分 7.7
 * [《淘宝技术这十年》](https://www.coderxing.com/r.php?r=https://u.jd.com/uZYvrV) - 豆瓣评分 7.3
 * [《尽在双11 阿里巴巴技术演进与超越》](https://www.coderxing.com/r.php?r=https://u.jd.com/VA9xEV) - 豆瓣评分 7.1
 * [《逆流而上：阿里巴巴技术成长之路》](https://www.coderxing.com/r.php?r=https://u.jd.com/5NdzxY) - 豆瓣评分 6.9


### 京东技术丛书
 * [《京东基础架构建设之路（全彩）》](https://www.coderxing.com/r.php?r=https://u.jd.com/ET1NkI) - 豆瓣评分 6.2
 * [《京东系统质量保障技术实战》](https://www.coderxing.com/r.php?r=https://u.jd.com/0OOBCc) - 豆瓣评分 6.1
 * [《京东技术解密》](https://www.coderxing.com/r.php?r=https://u.jd.com/V6tLFs) - 豆瓣评分 6.1


## 工具书

 * [《Linux命令行与shell脚本编程大全（第3版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/5U9zkK) - 豆瓣评分 9.1
 * [《阿里巴巴Java开发手册》](https://www.coderxing.com/r.php?r=https://u.jd.com/28U5lx) - 豆瓣评分 8.3
 * [《SQL即查即用 （全彩版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/d5ADPR)
 * [《Linux命令速查手册（第三版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/VgrIgv)


## 面试求职

 * [《剑指Offer：名企面试官精讲典型编程题（第2版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/IgfC55) - 豆瓣评分 9.1
 * [《编程之美：微软技术面试心得》](https://www.coderxing.com/r.php?r=https://u.jd.com/E4WimD) - 豆瓣评分 8.4
 * [《Java程序员面试笔试宝典》](https://www.coderxing.com/r.php?r=https://u.jd.com/UqcYlU) - 豆瓣评分 7.6
 * [《Java程序员面试宝典（第4版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/tm79JE) - 豆瓣评分 5
 * [《编程之法：面试和算法心得》](https://www.coderxing.com/r.php?r=https://u.jd.com/7ujWIz)
 * [《Java程序员面试算法宝典》](https://www.coderxing.com/r.php?r=https://u.jd.com/eE9uWg)
 * [《Java程序员面试笔试真题库》](https://www.coderxing.com/r.php?r=https://u.jd.com/Jc9Xlt)
 * [《Java程序员面试笔试真题与解析》](https://www.coderxing.com/r.php?r=https://u.jd.com/VqoEj5)
 * [《Java核心技术及面试指南》](https://www.coderxing.com/r.php?r=https://u.jd.com/pfIsU6)
 * [《解忧程序员：高薪编程、求职面试与成长转型宝典》](https://www.coderxing.com/r.php?r=https://u.jd.com/j0XMdh)


## 格局与视野

 * [《全球科技通史》](https://www.coderxing.com/r.php?r=https://u.jd.com/bgG9yE) - 豆瓣评分 9.4
 * [《浪潮之巅 第三版 套装上下册》](https://www.coderxing.com/r.php?r=https://u.jd.com/koCTxD) - 豆瓣评分 9.3
 * [《黑客与画家：硅谷创业之父Paul Graham文集 [Hackers and Painters Big Ldeas From the Computer Age]》](https://www.coderxing.com/r.php?r=https://u.jd.com/KbwmLQ) - 豆瓣评分 8.8
 * [《软件随想录 卷1》](https://www.coderxing.com/r.php?r=https://u.jd.com/EcKZym) - 豆瓣评分 8.8
 * [《软件随想录 卷2》](https://www.coderxing.com/r.php?r=https://u.jd.com/px8Sgu) - 豆瓣评分 8.7
 * [《编程人生：15位软件先驱访谈录》](https://www.coderxing.com/r.php?r=https://u.jd.com/6jRwgY) - 豆瓣评分 8.5
 * [《大教堂与集市（最新版） [The Cathedral & the Bazaar]》](https://www.coderxing.com/r.php?r=https://u.jd.com/6Y4Mcd) - 豆瓣评分 8.4
 * [《硅谷之谜：浪潮之巅 续集》](https://www.coderxing.com/r.php?r=https://u.jd.com/3yyV1D) - 豆瓣评分 8.4
 * [《原则 [Principles]》](https://www.coderxing.com/r.php?r=https://u.jd.com/M7OrgY) - 豆瓣评分 8.4
 * [《精益创业》](https://www.coderxing.com/r.php?r=https://u.jd.com/PxHueV) - 豆瓣评分 8.4
 * [《态度：吴军博士新书》](https://www.coderxing.com/r.php?r=https://u.jd.com/rdipjJ) - 豆瓣评分 8.1
 * [《见识》](https://www.coderxing.com/r.php?r=https://u.jd.com/cP4xDs) - 豆瓣评分 8.1
 * [《极限创新 35岁之前改变世界的全球科技精英》](https://www.coderxing.com/r.php?r=https://u.jd.com/oGJFTx) - 豆瓣评分 7.3
 * [《大学的终结：泛在大学与高等教育革命》](https://www.coderxing.com/r.php?r=https://u.jd.com/FBINiB) - 豆瓣评分 7.2
 * [《未来版图 全球聪明公司的科技创新趋势和商业化路径》](https://www.coderxing.com/r.php?r=https://u.jd.com/ZfHw4B) - 豆瓣评分 7.1
 * [《你好哇，程序员——漫话程序员面试求职、升职加薪、创业与生活》](https://www.coderxing.com/r.php?r=https://u.jd.com/cNCbEF) - 豆瓣评分 6.5
 * [《图灵和ACM图灵奖（1966-2015 第五版） 纪念计算机诞生70周年》](https://www.coderxing.com/r.php?r=https://u.jd.com/S1ZQhz)
 * [《文明之光（全彩印刷套装1-4册）入选2014中国好书/第六届中华优秀出版物获奖图书》](https://www.coderxing.com/r.php?r=https://u.jd.com/M3PkIU)
 * [《大师访谈录：成就非凡的软件人生》](https://www.coderxing.com/r.php?r=https://u.jd.com/JHxmei)


## Java之外

 * [《计算机科学丛书：计算机程序的构造和解释（原书第2版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/RCgC9H) - 豆瓣评分 9.5
 * [《计算机科学丛书：编译原理（第2版） [Compilers:Principle,Techniques and Tools]》](https://www.coderxing.com/r.php?r=https://u.jd.com/URRIW5) - 豆瓣评分 9.1
 * [《一个APP的诞生——从零开始设计你的手机应用》](https://www.coderxing.com/r.php?r=https://u.jd.com/fbemS8) - 豆瓣评分 6.3
 * [《大型网站性能优化实战：从前端、网络、CDN到后端、大促的全链路性能优化详解》](https://www.coderxing.com/r.php?r=https://u.jd.com/F4SUYQ)


### 网络知识
 * [《图解HTTP》](https://www.coderxing.com/r.php?r=https://u.jd.com/q3lNRK) - 豆瓣评分 8.1
 * [《图解TCP/IP 第5版》](https://www.coderxing.com/r.php?r=https://u.jd.com/Ip1U7X) - 豆瓣评分 7.8


### 安全知识
 * [《白帽子讲Web安全（纪念版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/6oCOp8) - 豆瓣评分 7.4
 * [《Web安全攻防：渗透测试实战指南》](https://www.coderxing.com/r.php?r=https://u.jd.com/gecmeS)


### 工具
 * [《Maven实战》](https://www.coderxing.com/r.php?r=https://u.jd.com/Fv9ksZ) - 豆瓣评分 8.2
 * [《大象：Thinking in UML（第2版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/JvxLfz) - 豆瓣评分 8.2
 * [《Git学习指南》](https://www.coderxing.com/r.php?r=https://u.jd.com/x06AA6) - 豆瓣评分 6.7
 * [《UML基础、案例与应用（第3版 修订版）》](https://www.coderxing.com/r.php?r=https://u.jd.com/W50GoO)


### 运维&DevOps
 * [《编码：隐匿在计算机软硬件背后的语言 [Code:The Hidden Language of Computer Hardware and Software]》](https://www.coderxing.com/r.php?r=https://u.jd.com/3ejMcd) - 豆瓣评分 9.3
 * [《DevOps实践指南》](https://www.coderxing.com/r.php?r=https://u.jd.com/pVBguN) - 豆瓣评分 9
 * [《性能之巅：洞悉系统、企业与云计算》](https://www.coderxing.com/r.php?r=https://u.jd.com/RXZBkB) - 豆瓣评分 8.7
 * [《鸟哥的Linux私房菜 基础学习篇 第四版》](https://www.coderxing.com/r.php?r=https://u.jd.com/kzDG88) - 豆瓣评分 8.2
 * [《DevOps开发运维训练营》](https://www.coderxing.com/r.php?r=https://u.jd.com/Slnb59)


# 国内低代码平台

## 全栈平台

* 阿里-云凤蝶
  * [蚂蚁杨周璇：我做前端这十多年来的感悟](https://mp.weixin.qq.com/s/GiFpswpm_N_5MlnBywRTgw)
  * [云凤蝶可视化搭建的推导与实现](https://zhuanlan.zhihu.com/p/101665976)
  * [云凤蝶中台研发提效实践](https://zhuanlan.zhihu.com/p/78425921)
  * [中台建站的智能化探索](https://zhuanlan.zhihu.com/p/54422324)
  * [云凤蝶如何打造媲美 sketch 的自由画布](https://zhuanlan.zhihu.com/p/92469406)
  * [云凤蝶自由画布之道：分层模型](https://zhuanlan.zhihu.com/p/97768853)
* 阿里-金蝉
  * [长夜未央——企业级研发提效的下一阶段](https://zhuanlan.zhihu.com/p/66474056)
  * [十倍效能提升——Web 基础研发体系的建立](https://zhuanlan.zhihu.com/p/34790596)
  * [前端服务化——页面搭建工具的死与生](https://www.cnblogs.com/sskyy/p/6496287.html)
* [阿里-宜搭](https://www.aliwork.com/)
* 阿里-通用低代码基础设施
  * [低代码引擎搭建协议规范](https://lowcode-engine.cn/lowcode) | [低代码引擎物料协议规范](https://lowcode-engine.cn/material) | [低代码引擎资产包协
议规范](https://lowcode-engine.cn/assets)
  * [阿里开源的低代码引擎](https://github.com/alibaba/lowcode-engine) | [官网](https://lowcode-engine.cn)
  * [阿里低代码引擎和生态建设实战及思考](https://mp.weixin.qq.com/s/MI6MrUKKydtnSdO4xq6jwA)
* 阿里-天马
  * [如何设计阿里经济体都在用的搭建服务—天马](https://zhuanlan.zhihu.com/p/137470317)
* 腾讯-积木
  * [积木系统v2@江源.pptx](https://vdisk.weibo.com/s/cSKQveSBDMPco)
  * [积木系统，将运营系统做到极致](https://cloud.tencent.com/developer/article/1055079)
* 腾讯-lowcode
  * [腾讯云开发低码平台](https://console.cloud.tencent.com/lowcode)
  * [腾讯无极低码平台](https://wujicode.cn)
* 葡萄城-活字格
  * [活字格企业级低代码开发平台](https://www.grapecity.com.cn/solutions/huozige)
  * [活字格产品经理胡耀：看活字格低代码平台是如何诞生的](https://www.soft6.com/news/2021/08/24/377493.html)
  * [驳“低代码开发取代程序员”论 为什么专业开发者也需要低代码？](https://segmentfault.com/a/1190000040842990)
* [无远开发平台](https://wuyuan.io/)
  * [案例](https://wuyuan.io/case)
  * [为什么专业开发者都选择无远](https://zhuanlan.zhihu.com/p/382493959)
* [奥哲](https://www.authine.com/)
  * [氚云](https://h3yun.com/index.php?g=Chuanyun&m=Index&a=index)
* [ivx](https://www.ivx.cn/index)
  * [关于iVX平台实现的总体技术栈【低代码/无代码、可视化开发语言】](https://blog.csdn.net/troymeng/article/details/110384703)
  * [iVX是怎么开发出来的？0代码开发的理论基础是什么？](https://bbs.ivx.cn/1535) 
  * [iVX和其他低代码的开发平台区别究竟在哪里](https://bbs.ivx.cn/mobile/2746)
  * [ih5](https://www.ih5.cn/)
* [闪电数据管理](http://www.gitmen.com/lightning)
  * [闪电数据管理 —— 无代码数据管理(开发)系统](https://zhuanlan.zhihu.com/p/162964986)
  * [lightning —— 基于Django的无代码Admin及低代码开发框架](https://github.com/git-men/lightning)
* [巴克云](https://www.buckycloud.com/)
* [数式科技](https://shushi.pro/technology)
* [明道云](https://www.mingdao.com/) 支持公共云和私有部署，私有部署在Github可获得[免费社区版下载](https://github.com/mingdaocom/private-deployment)
* [轻流](https://qingflow.com/)
* [速融云](https://www.surongyun.cn/)
* [简道云](https://www.jiandaoyun.com/)
* [启业云](https://www.qycloud.com.cn/)
* [双链DaaS](https://github.com/doublechaintech/daas-start-kit)
  * [直接通过Github Actions体验](https://github.com/doublechaintech/daas-with-github-actions)
  * [大型系统构建案例-1.5K Stars](https://github.com/doublechaintech/scm-biz-suite)
  * [包含实时预效果的KSML操练场-开发中](http://kg2x.doublechaintech.com/view/playground)
* [炎黄盈动](https://www.actionsoft.com.cn/)
* [广州天翎myApps](http://www.teemlink.com/)
* [起步科技](http://www.wex5.com/)
* [金蝶云-苍穹](http://www.kingdee.com/products/cosmic)
* [普元](http://primeton.com/products/ep/overview.php)
* OpsMind
  * [OpsMind 前端低代码开发平台--MPlatform](https://mp.weixin.qq.com/s/gTVUii6ekVZNoX-6k5UCcg)
* [xdeer](https://www.xdeer.cn/)
* [湘北智造](https://www.xjrsoft.com/)
* [表单大师](https://www.jsform.com/)
* [Zion/载航](https://functorz.com/)
* [Appsmith](https://www.appsmith.com/)（[Github](https://github.com/appsmithorg/appsmith)）
* [ILLA Cloud/艾拉云](https://www.illacloud.com/)（[Github](https://github.com/illacloud/illa-builder)）
* [白码](https://www.bnocode.com/product.html)
* [捷码](https://gemcoder.com/)
  * 支持业务系统/管理系统、可视化大屏、3D园区低码快速开发
  * 支持离线部署
* [明源云-天际开放平台](https://open.mingyuanyun.com)
  * [移动平台](https://open.mingyuanyun.com/product/mpaas)
  * [建模平台](https://open.mingyuanyun.com/product/platform)
* [织信低代码平台](https://www.informat.cn/)
  * [平台简介](https://www.informat.cn/promotion)
  * [生产领域实践案例&君乐宝](https://www.informat.cn/case/jlb)
  * [织信Informat携手低码星球探讨「企业数字化转型之路」](https://www.informat.cn/detail/248)
  * [如何通过织信Informat快速搭建流程审批系统？](https://www.informat.cn/detail/228)
  * [5K字深度讲解：如何用织信Informat搭建OA和进销存？](https://zhuanlan.zhihu.com/p/393588263)
* [crudapi-增删改查接口平台](https://crudapi.cn)
  * [无需编程，通过配置零代码生成crud增删改查RESTful API和UI](https://help.crudapi.cn/helloworld.html)
  * [前端（开源）](https://github.com/crudapi/crudapi-admin-web)：Vue + Quasar实现Web管理UI，可任意修改。
  * [后端（商业使用永久免费，无任何功能限制）](https://github.com/crudapi/crudapi-example)：Java + Jdbc实现Service，数据库支持MySQL、PostgreSQL、SQL Server和Oracle，支持二次开发和私有部署。
  * [demo演示](https://demo.crudapi.cn/crudapi/)
* [Gadmin企业级低代码开发平台](https://www.gadmin8.com/)
  * [平台简介](https://www.gadmin8.com/index/about.html)
  * [平台演示](https://demo.gadmin8.com/)
* [象传智慧](https://www.iqka.com/docs/?engine)
  * [Yao](https://yaoapps.com/)
* [引迈信息](https://www.jnpfsoft.com/)
* [兰途科技](http://www.app8848.com)
  * [aPass软件工厂](https://www.yuque.com/books/share/9aab5860-6301-4519-a8ae-ac1d3b9dee11)
* [矩阵低代码](https://www.deepmatrix.cn/) : 支持私有化部署，支持离线部署，私有化部署版本可跟随主版本免费升级
	* [平台演示](https://server.deepmatrix.cn/) : 账户：15000000000 密码： 123456
	* [平台介绍](https://www.deepmatrix.cn/)
	* [系统文档](https://www.yuque.com/dawei-ktv92)
* [星云座插件式低代码](https://www.xingyunzuo.com/) 
	* 插件方式融入现有的业务系统，贯通用户权限和业务数据，赋能业务系统具备低代码开发能力
	* 支持开发平台/项目私有化部署，开发平台与项目相互独立互补依赖
	* [产品介绍](https://mp.weixin.qq.com/s/3PyctlBCIbOQRiCunFlR3Q)
	* [平台演示](https://dev.xingyunzuo.com/): 用户名：18888888888 密码：888888
	* [产品视频](https://space.bilibili.com/2045740689)
* [瓦立应用](https://www.waliapp.cn/) 
	* 支持可视化小程序搭建、
	* 支持各种业务系统开发（具有表单、工作流、报表设计等模块）
	* [系统文档](https://www.yuque.com/zhonglixunni/wali)
* [瀚码工业低代码](https://www.hancode.com/products/lcdp) 
	* 四大工业特性：工业组件（工艺流程图、工作日历、脑图、树形图、鱼骨头...）、工业模版（MES、TPM、QMS、WMS、AMES）、移动PDA支持、系统对接（PLC、CNC、注塑机、ERP...）
	* 模型驱动、应用可与开发平台分离【重点】
	* [系统文档](https://hancode.yuque.com/ibi3kw/qzp9ku/ywwzqm)
	* [产品介绍](https://www.zhihu.com/question/402663485/answer/2772342587)
## 页面搭建

仅包含前端部分的 low code 平台

* [MAKA](http://maka.im/)
* [易企秀](https://store.eqxiu.com/)
* [上线了](https://www.sxl.cn/)
* [兔展](https://www.rabbitpre.com/)
* [稿定设计](https://m.gaoding.com/)
* [壹伴](https://yiban.io/)
* [创客贴](https://www.chuangkit.com/)
* [点石](https://www.h5ds.com/)
* 腾讯-tmagic-editor
  * [开源的页面可视化搭建编辑器tmagic-editor](https://github.com/Tencent/tmagic-editor)
* 京东-通天塔
  * [京东商城活动页面构建系统——通天塔](https://blog.csdn.net/zl1zl2zl3/article/details/84661421)
* [阿里-imgcook](https://imgcook.taobao.org/)
* 转转-魔方
  * [持续迭代的电商可视化运营页面生成系统](https://www.cnblogs.com/zhuanzhuanfe/p/10500786.html)
* 人人贷-活动运营平台
  * [活动运营自动化平台实践](https://zhuanlan.zhihu.com/p/68108055)
* 美团-乐高
  * [美团外卖前端可视化界面组装平台 —— 乐高](https://zhuanlan.zhihu.com/p/27288444)
* [百度-h5](https://h5.bce.baidu.com/)
  * [前端即服务-通向零成本开发之路](https://os.alipayobjects.com/rmsportal/sJqXvOtwePsVWGNIwlas.pdf)
* 政采云-鲁班
  * [前端工程实践之可视化搭建系统（一）](https://juejin.im/post/5d8774bff265da03ae78b2a1)  
* 携程-民宿CMS
  * [活动专题系统搭建过程中我的一些思考](https://www.dazhuanlan.com/2019/10/07/5d9a698bdde35/)
* 携程-乐高
  * [干货 | 已配置4000+页面，携程前端组件化探索之“乐高”运营系统](https://mp.weixin.qq.com/s/WDCkXEBa0bA-h_8L6cBcJw)
* 云智慧-FlyFish
  * [低门槛、高拓展性的低代码应用开发平台](https://www.cloudwise.ai/flyFish.html)
* 知乎-Versatile Editor
  * [「可视化搭建系统」——从设计到架构，探索前端领域技术和业务价值](https://zhuanlan.zhihu.com/p/164558106)
* [阿里-bi designer](https://github.com/dt-fe/weekly/blob/v2/164.%E7%B2%BE%E8%AF%BB%E3%80%8A%E6%95%B0%E6%8D%AE%E6%90%AD%E5%BB%BA%E5%BC%95%E6%93%8E%20bi-designer%20API-%E8%AE%BE%E8%AE%A1%E5%99%A8%E3%80%8B.md)


* [360 - 即视](https://arena.360.cn/)
* http://h5.dooring.cn/
* https://quarkly.io/  No-code / Low-code platform for creating websites and web apps.
* [乐搭云](https://ledayun.com.cn/)
* [愚公](https://yugong.dawenxi.art/dashboard/#/project)
* [榫卯（sunmao-ui）](https://sunmao-ui.com/)
  
## 店铺装修

非独立页面，依附于业务系统存在的页面搭建

* [shopify](https://apps.shopify.com/browse/store-design-page-builders)
* 有赞-微页面
* 淘宝店铺装修
  
## ![Open Source Love svg3](https://badges.frapsoft.com/os/v3/open-source.svg?v=103)

* [阿里-飞冰](https://ice.work/)
* [阿里-formilyjs](https://formilyjs.org/)
  * [MegaLayout - 下一代Formily表单布局解决方案](https://zhuanlan.zhihu.com/p/133906363)
  * https://github.com/alibaba/designable
* [阿里-gaea-editor](https://github.com/ascoders/gaea-editor)
  * [可视化在线编辑器架构设计](https://juejin.cn/post/6844903455417434119)
* [阿里-sula](https://github.com/umijs/sula)
* [视搭-视频可视化搭建](https://github.com/tnfe/shida)
* https://github.com/alibaba/lowcode-engine
* [blockVisualEditor](https://github.com/sww1230/blockVisualEditor)
* [pager](https://github.com/laispace/pager)
* [运满满-码良](https://github.com/ymm-tech/gods-pen)
  * [如何设计高扩展的在线网页制作平台](https://juejin.im/post/5bd83daee51d4524b50d23b5)
* [X-Page-Editor](https://github.com/OXOYO/X-Page-Editor-Vue)
* [Vue-Layout](https://github.com/jaweii/Vue-Layout)
* [antd-visual-editor](https://github.com/xinyu198736/antd-visual-editor)
* [pipeline-editor](https://github.com/page-pipepline/pipeline-editor)
  * [【第1524期】页面可视化搭建工具技术要点](https://mp.weixin.qq.com/s/90JJAFhGokKmicOQZxdAGg)
* [panel-magic](https://ricbet.github.io/panel-magic/)
  * [基于 Angular 的小程序可视化编辑器 Panel-Magic 的实现解析](https://zhuanlan.zhihu.com/p/101677992)
* [百度外卖-blocks](https://github.com/Eyot424/blocks)
  * [百度外卖如何做到前端开发配置化](https://juejin.im/post/59536bad6fb9a06ba024d96d)
* [Esview ](https://github.com/furioussoul/esview)
* [gen](https://github.com/genany/gen)
* [bee gen pro](https://gocn.vip/topics/10724)
* [百度-amis](https://github.com/baidu/amis)
  * [Ovine](https://github.com/CareyToboo/ovine)：基于 amis 补全了路由、权限相关的组件
  * [爱速搭](https://suda.baidu.com/)
* [唯品会-ams](https://github.com/vipshop/ams)
* [vue-admin](https://github.com/jiangshanmeta/vue-admin)
* [鲁班 H5](https://github.com/ly525/luban-h5)
* [华炎魔方](https://github.com/steedos/steedos-platform/)
  * [低代码 DevOps 平台协议](https://low-code-protocol.com/docs/overview) 
* [h5-factory](https://github.com/yangyuji/h5-factory)
  * [一个简单易用的电商活动页面生成系统](https://juejin.im/post/5cf328706fb9a07f042030f0)
* [vision](https://github.com/tuoxiansp/vision)
* [brick-design](https://github.com/brick-design/react-visual-editor)
* [随心秀](https://github.com/lzuntalented/lz-h5-edit)
* [yh5](https://github.com/qq15725/yh5)
* [rxeditor](https://github.com/rxwater/rxeditor)
* [activity-YD](https://github.com/vkcyan/activity-YD)
* [layoutit](https://github.com/justjavac/layoutit)
* [Ramiko](https://github.com/fantasticit/ramiko)
  * [使用 React 构建页面可视化搭建工具](https://www.v2ex.com/t/685143)
* [jeecg-boot](https://github.com/zhangdaiscott/jeecg-boot)
* [sparrow-js](https://github.com/sparrow-js/sparrow)
  * [实时输出前端代码，折腾大半年的开源项目 sparrow-js](https://www.v2ex.com/t/718505)
* [Tefact](https://github.com/staringos/tefact): Tefact 轻量级无代码/低代码，H5、表单编辑器
* [星搭](https://staringos.com): 星搭无代码平台，快速构建中后台、小程序
* [好未来晓黑板go-zero微服务框架](https://github.com/tal-tech/go-zero): 你不需要懂微服务，懂业务就行
* [cube](https://github.com/fantasticit/cube)：快速搭建中后台页面
* [react-visual-design](https://github.com/react-visual-design/react-visual-design): 基于react的h5组件搭建
* [Web Designer](https://github.com/xiaoai7904/web_designer)
* [h5maker](https://github.com/zhengguorong/h5maker)
* [pl-drag-template](https://github.com/livelyPeng/pl-drag-template)
* [form-generator](https://github.com/JakHuang/form-generator)：Element UI表单设计及代码生成器
* [form-render](https://github.com/alibaba/form-render)：通过 JSON Schema 生成标准 Form，基于React
* [Vue Json Design](https://github.com/fyl080801/vjdesign)
* [rebuild](https://gitee.com/getrebuild/rebuild)
* [W5 SOAR](https://github.com/w5teams/w5)
* [Moria - Lowcode development platform](https://github.com/MudOnTire/moria)
* [nocobase](https://github.com/nocobase/nocobase)
* [Mall-Cook](https://github.com/wangyuan389/mall-cook)
* [全象低代码平台渲染引擎 Artery Renderer](https://github.com/quanxiang-cloud/one-for-all/tree/main/packages/artery-renderer)
* https://github.com/bojue/Web-Editor
* [OpenDataV - 基于Vue3的拖拽式、低代码数据可视化平台](https://github.com/AnsGoo/openDataV)
* [StaringOS MtBird](https://github.com/staringos/mtbird): 开源小程序、H5、网站低代码平台，无需代码，拖拽操作快速生成页面应用，数据可视化接入，定制业务自由拓展.

---

* https://github.com/blocks/blocks
* https://github.com/frappe/frappe
* https://github.com/ipselon/structor
* https://github.com/vigetlabs/colonel-kurtz
* https://github.com/BuilderIO/builder
* https://github.com/vuegg/vuegg
* https://webcodesk.com/
* https://github.com/odoo/odoo
* https://github.com/imgcook/imove

## 办公/管理系统 a.k.a no-code

* [黑帕云](https://hipacloud.com/)
* [极星协作](https://app.bjx.cloud/template)
* [维格表](https://vika.cn/)
* [阿里云-Teambition](https://www.teambition.com/tour)
* [阿里云-RPA](https://cn.aliyun.com/product/codestore)
* [SeaTable](https://seatable.cn/)
* [蒲公英-Tracup](https://www.tracup.com/)
* [蒲公英-Seed](https://seed.pgyer.com/)
* [伙伴云](https://www.huoban.com/)
* [monday.com](https://monday.com/)
* [Airtable](https://airtable.com/)
* [Notion](https://www.notion.so/)
* https://welovenocode.com/nocodelist
* [Taskade](https://www.taskade.com/)

## 声明式编程

* ["Probabilistic scripts for automating common-sense tasks" by Alexander Lew](https://www.youtube.com/watch?v=MiiWzJE0fEA)

## 行业综述

* [Forrester《The State Of Low-Code Platforms In China》（中国低代码平台发展报告）](https://zhuanlan.zhihu.com/p/436106248)
* [精读《对低代码搭建的理解》](https://zhuanlan.zhihu.com/p/161783546)
* [页面可视化搭建工具前生今世](https://zhuanlan.zhihu.com/p/37171897)
* [React.js 可视化编辑工具](https://juejin.im/post/5d7ae944f265da03c5033e38)
* [对低代码、零代码产品的一些看法](https://zhuanlan.zhihu.com/p/156887528)
* [对 aPaaS 的产品认知](https://zhuanlan.zhihu.com/p/149801853)
* [无代码编程](https://zhuanlan.zhihu.com/p/61288928)
* [万物代码化：从低代码、云开发到云研发的思考](https://zhuanlan.zhihu.com/p/141742525)
* [《早早聊搞搭建》搞过搭建的我收获了什么？](https://juejin.im/post/6844904106767695880) 
* [工程化之低代码体系](https://juejin.cn/post/6913698066935578631)
* [LowCode平台前端实战之京东投放素材中心](https://zhuanlan.zhihu.com/p/386761240) 

## 技术点

* 可逆计算
  * [可逆计算：下一代软件构造理论](https://zhuanlan.zhihu.com/p/64004026)
  * [从可逆计算看声明式编程](https://zhuanlan.zhihu.com/p/85492497)
* [161.精读《可视化搭建思考 - 富文本搭建》](https://github.com/dt-fe/weekly/issues/262)
* [面向 Model 编程的前端架构设计](https://zhuanlan.zhihu.com/p/144157268)
* [流动的数据——使用 RxJS 构造复杂单页应用的数据逻辑](https://github.com/xufei/blog/issues/38)
* [使用 React 写个简单的活动页面运营系统 - 设计篇](https://segmentfault.com/a/1190000004540256)
* [【电商】用可视化编辑，解构看起来非常炫酷的专题页面](https://www.jianshu.com/p/c4359a7338d3)
* [如何搭建一个功能复杂的前端配置化框架(一)](https://www.cnblogs.com/wukong-holmes/p/9287763.html)
* [可视化拖拽组件库一些技术要点原理分析](https://juejin.cn/post/6908502083075325959)
* [可视化拖拽组件库一些技术要点原理分析（二）](https://juejin.cn/post/6918881497264947207)
* [可视化拖拽组件库一些技术要点原理分析（三）](https://juejin.cn/post/6929302655118344200)
* [可视化拖拽组件库一些技术要点原理分析（四）](https://juejin.cn/post/7129311619963682830)
* [揭秘活字格最受程序员喜爱的三大功能背后的设计思路](https://www.grapecity.com.cn/blogs/huozige-the-three-most-popular-features-for-programmers)

## 国外

* https://www.honeycode.aws/
* https://developers.google.com/appmaker
* https://powerapps.microsoft.com/zh-cn/
* https://www.zoho.com/creator/
* https://www.salesforce.com/
* https://www.appian.com/
* https://bubble.io/
* https://www.adalo.com/
* https://thunkable.com/
* http://www.vvveb.com/vvvebjs/editor.html
* https://www.forestadmin.com/
* https://mobirise.com/
* https://paperbits.io/
* https://builderx.io/
* https://grapesjs.com/
* https://reactstudio.com/
* https://www.wix.com/
* https://university.webflow.com/
* https://www.squarespace.com/
* https://www.framer.com/
* https://www.figma.com/
* https://linx.software/
* https://www.mendix.com/zh/
* https://www.outsystems.com/
* https://retool.com/
* https://www.quickbase.com/
* https://layoutit.com/
* https://www.claris.com/zh/filemaker/
* FoC 聊天记录：https://marianoguerra.github.io/future-of-coding-weekly/history/?fromDate=2017-06-13&toDate=2017-06-14&channel=general&filter=
* https://www.joget.com/
* https://help.appsheet.com/en/
* https://appery.io/
* [ERD Lab](https://www.erdlab.io/) - Free cloud based entity relationship diagram (ERD) tool made for developers.

# 一切改进都是源自于人类的缺陷

## How we think

* 人脑是串行的，无法有效并行思考多条线索
  * 人脑不适合思考并行执行的多线程
    * 【单线程】把共享变量的编程模式改成事务整体提交的模式
  * 人脑不适合思考同时呈现在屏幕上的多个独立的业务流程
    * 代码是按发生时间组织的，在一起的代码未必是逻辑上有关联的业务流程
      * 【按业务切分文件】阅读者应该可以按照自己的任务目标来跟踪索引，而不是默认一个按钮点击引起的处理逻辑都一定要写在一个大文件里
      * 【按变更频率切分文件】业务变更是阅读的首要原因，代码应该按照业务变更的频率来组织。会同时变更的代码应该放在一起
  * 人脑很难管理多份独立可变的状态，本质上每个独立变化的状态就是一个独立的线程
    * 驱动状态数量熵增的三大因素：
      * 因为交互体验的要求，从后端到富客户端到3d动画，状态被复制多份，越来越靠近展示层
      * 因为硬件物理的约束，内存从CPU统一寻址，到异构计算，CUDA，每个硬件核都有一层自己的内存
      * 因为数据量的增长，从统一的OLAP从库，到Data Lake，Data Mart，数据被复制成越来越多份，流水线越来越长
    * 对抗状态数量熵增的手段：
      * 【声明式数据联动】减少独立变化的状态，用表达式来表达 derived state
      * 【全局虚拟数据层】借鉴Unix的统一文件抽象，引入一层统一的虚拟数据层。尽可能把状态转化成 cache
  * 人脑很难理解新增对原有行为的剧烈变化，更习惯逐层稳定叠加。也就是人更希望“控制变量”
    * css 最大的难度在于不正交，新增一条对规则会引起意想不到的效果
      * 【局部化布局】swiftui 的 HStack/VStack/ZStack 布局规则数量少，每条规则作用都是局部的稳定的叠加
    * 性能优化往往需要破坏局部性，因为局部的自治容易引起重复劳动
      * 【局部化IO】系统自动实现 I/O 的批量等可以自动化做的全局优化
      * 【局部化IO】业务写成自治的，但是可以附加额外的手工全局调优。而不是强制要求把业务逻辑从局部抽出去
      
## How we perceive 

* 人眼只能在狭窄的感受野里获得信息
  * 人对时间的感知是来自于对空间的感知
  * 人希望在一个屏幕内从上往下的获取时间顺序上从早到晚的信息
    * callback 的编程方式破坏了屏幕上的顺序和时间顺序的直接映射关系
      * 【协程式IO】用协程取代 callback，把屏幕上的代码撸直
    * 通过 status 字段驱动的业务状态机破坏了屏幕上的顺序和时间顺序的直接映射关系
      * 【协程式业务流程】用协程取代 status 状态机，把屏幕上的代码撸直
  * 因为感受野的限制，源代码没有空间展示所有的细节
    * 类型定义，内存分配等“细节”占用了大量的视觉区域
      * 【IDE细节隐藏】在文本上省略掉细节，由 IDE 进行补全，当鼠标移动上去的时候才展示出来
    * 人最习惯的空间整理方式仍然是层状的文件夹
      * 所有的“架构”设计，最终都是对文件夹和文件的设计。但是一个维度的静态索引（文件夹嵌套）无法满足所有可能的检索需求
        * 【IDE按需索引】由 IDE 来补全文件夹分类不能满足的索引需求，针对阅读者的任务来设计IDE索引
  * 视杆细胞容易忽略形状和顺序的差异，但是对颜色更敏感
    * 语法高亮占用了宝贵的资源，但是并没有考虑阅读者的诉求
      * 【IDE按需高亮】对于不同的任务，阅读者希望找到的重点是不同的，语法高亮应该结合任务来做 
      
## How we collaborate

* 人与人之间最高效的沟通的方式是面对面的交互式声波震动
  * 人类低下的沟通带宽根本上限制了一个团队的规模
    * 上线速度要求越快越好，但是加人带来的边际效益递减
      * 减少开会拉齐，团队应该尽可能地自治，而不是什么都要靠 feature team 横向拉通
        * 高内聚，低耦合
          * 【静态链接包】编程工具应该提供更多的组合可能，而不是所有的组合都要在运行时用面向对象的多态来实现
          * 【按变更频率切分包】分工应该按照变更频率来确定，分工应该是明确的
  * 尽可能由最终用户，或者靠近最终用户的团队来解决问题，而不是长距离传递需求
    * 最终用户编程：直接让需求提出者自己来实现需求
      * 把“学习”内置到工具里，需要内置一个教学工具
        * 最终用户的编程工具开发难度高，成本高，投入超过了单个软件的回报
          * 【编辑器预制】把“公式编辑”，“店铺装修”等常见共性需求提前预制
      * 教学工具的目标是教学，而不是把自己标杆为更先进的生产力
        * 【教学内置】提供教学模式和生产力模式的无缝切换
    * 低代码编程：通过提前预制，把工作量前置，减少应用开发者的规模，从而可以在组织架构上把开发者内置到用户组织内部。与此相对应的是文档驱动的外包式开发。
      * “预制”来自于对共性需求的提前预判
        * 【非功能性需求云化】非功能性需求的实现，都是运行在相似的机器上
          * 操作系统
          * k8s
          * RPC 框架
        * 开发者都是人类
          * 编程工具
          * 沟通工具
        * 用户都是人类
          * 【SaaS组件】IM / 电话 / 短信
          * 【Ui组件】字处理器 / 表格
          * 【CRUD生成】惯用的展现和交互
            * 列表详情
            * 树状层级
            * 表格结构
            * 可拖拽白板
        * 【SaaS组件】相对稳定的业务流程
          * 登录注册
          * 支付
        * 行业内相对稳定的业务共性流程
          * 电商
          * HR / 招聘
          * 销售管理 / CRM
          
## How we learn

* 人的“归纳/理解/学习”能力高度依赖于可视化交互式地操纵与反馈
  * 帮助应该放在任务执行的地方，与其说“可视化”，不如说是“可发现”
    * 【填空题变选择题】单独的语法手册是不好使的，必须提供界面上的按钮，把填空题变成选择题，这样才能启发学习
      * GUI 设计器 / 店铺装修
      * 公式编辑器
      * 审批 / 工作流设计器
      * trigger 流程设计器
  * 人习惯于用手触碰一下对象，然后观测其反馈，从而归纳学习
    * 不可观测的行为无法学习
      * 生产环境的bug无法本地复现，我怎么找规律？
        * 【TestInProduction】tracing，大量的 tracing，流量回放
      * lowcode 平台的bug没有任何线索，除了找平台开发者，我能怎么办？
        * 不能要求用户了解所有的内部细节，“平台”要做到可依赖
        * 业务逻辑问题的定位和生产环境的bug定位一样，靠 tracing
    * 反馈太慢的行为给人的负面感受是指数增加的
      * 本地机器太慢了跑不起来，需要上公司的沙盒环境来复现问题
        * 【云IDE】
      * 改完了代码需要重新编译重新加载
        * 【LanguageServer】交互式开发的时候跳过不必要的编译
        * 【所见即所得】所见即所得的 GUI 开发，本质上就是用解释器执行，换取编译时间的缩减
        * 【HMR】重加载的时候保持页面状态
        
# no code / low code / pro code

一切的改进都是源自于人类的缺陷

* no code：自己编程给自己用，给用户的感觉是一个更强大的办公/实用软件。主要的手段是用图形化操作等方式降低学习曲线。no code 一定要面向非常固定的领域才能做到好用。
* low code：编程给其他人用，为此创造了一个 citizen developer 的概念。主要的手段是平台预制好常见的需求，减少需要从头写的代码。low code 也要面向指定的领域才能让平台提前预测需求，但相比 no code 可以不把使用场景限定得那么死。
* pro code：low code 的平台自己不会选择 low code 来创建这个平台本身，因为 low code 并没有降低从头构建一个系统的成本。但是 pro code 的平台自己会选择 pro code 来创建这个平台本身，比如 react 开发者会选择用 react 来创建自己的开发工具，因为 pro code 的工具和平台都是以从根本上降低从头构建一个系统的复杂度为目标的。


## Table of Contents

<% for(let [language, repositories] of stars) { %>
## <%= language %>
  <% for(let repo of repositories) { %>
- [<%= repo.full_name %>](<%= repo.html_url %>) - <%= repo.description %>
  <% } %>
<% } %>

## Thanks

- generated with [webVueBlog/awesome-stars-webVueBlog](https://github.com/webVueBlog/awesome-stars-webVueBlog)
